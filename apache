Deploying to production:

* Python27 and Django==1.7.2(preffered) Must Installed
* python-mysqldb

1) Install python-virtualenv and apt-get install libapache2-mod-wsgi first
2) cd /var/www/ and put your project
3) cd your-project and run:
   $ sudo virtualenv env
    
4) Install django:
   $ sudo env/bin/pip install django
   $ sudo pip install Pillow (for images - if not present)
        When error comes like 'python.h' is missing:
        Install these first:
        $ sudo apt-get install libffi-dev
        $ sudo apt-get install libssl-dev
        $ sudo apt-get install python-dev

5) Add this to default apache conf:

    <VirtualHost *:80>
	    WSGIDaemonProcess ProStarter python-path=/var/www/ProStarter:/var/www/ProStarter/env/lib/python2.7/site-packages
	    WSGIProcessGroup ProStarter
	    WSGIScriptAlias / /var/www/ProStarter/ProStarter/wsgi.py

	    ServerAdmin webmaster@localhost
	    DocumentRoot /var/www/ProStarter
	
	    Alias /static/admin "/var/www/ProStarter/env/lib/python2.7/site-packages/django/contrib/admin/static/admin"
	    Alias /static "/var/www/ProStarter/appstarter/static"
	    <Directory "/var/www/ProStarter/env/lib/python2.7/site-packages/django/contrib/admin/static/admin">
		    Order allow,deny
		    Options Indexes
		    Allow from all
		    IndexOptions FancyIndexing
	    </Directory>
	
	    ErrorLog ${APACHE_LOG_DIR}/error.log
	    CustomLog ${APACHE_LOG_DIR}/access.log combined
    </VirtualHost>

6) Add Your IP host to allowed host

7) Create DB and Sync (If not present)

8) Check permission for your directory must chmod 777
# images folder
NOTE: Pasting File/Folder will changed perms, so check it

9) Change Environment in config to 'production'
NOTE: In production differs the directory path, so it's a must

8) restart apache

All Done ! Cheers !

